"""TEST start

Revision ID: 3c405fdce96b
Revises: 
Create Date: 2025-10-20 17:10:57.897971

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3c405fdce96b'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('certificate_types',
    sa.Column('id', sa.SmallInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=12), nullable=False),
    sa.Column('title', sa.String(length=40), nullable=False),
    sa.Column('hours', sa.SmallInteger(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('countries',
    sa.Column('id', sa.SmallInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nationalities',
    sa.Column('id', sa.SmallInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('certificate_themes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('certificate_type_id', sa.SmallInteger(), nullable=False),
    sa.ForeignKeyConstraint(['certificate_type_id'], ['certificate_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cities',
    sa.Column('id', sa.SmallInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('country_id', sa.SmallInteger(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('districts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('city_id', sa.SmallInteger(), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('students',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(length=30), nullable=False),
    sa.Column('second_name', sa.String(length=30), nullable=False),
    sa.Column('third_name', sa.String(length=30), nullable=True),
    sa.Column('gender', sa.Boolean(), nullable=False),
    sa.Column('born', sa.Date(), nullable=True),
    sa.Column('jshir', sa.String(length=14), nullable=True),
    sa.Column('passport', sa.String(length=10), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('education_type', sa.String(length=20), nullable=False),
    sa.Column('phone1', sa.String(length=14), nullable=True),
    sa.Column('phone2', sa.String(length=14), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('nationality_id', sa.SmallInteger(), nullable=False),
    sa.Column('district_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ),
    sa.ForeignKeyConstraint(['nationality_id'], ['nationalities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('students')
    op.drop_table('districts')
    op.drop_table('cities')
    op.drop_table('certificate_themes')
    op.drop_table('nationalities')
    op.drop_table('countries')
    op.drop_table('certificate_types')
    # ### end Alembic commands ###
